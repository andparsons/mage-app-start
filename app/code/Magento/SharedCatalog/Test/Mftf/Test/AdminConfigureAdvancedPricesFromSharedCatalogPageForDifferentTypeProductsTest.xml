<?xml version="1.0" encoding="UTF-8"?>

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminConfigureAdvancedPricesFromSharedCatalogPageForDifferentTypeProductsTest">
        <annotations>
            <description value="Ability to configure Advanced Prices from Shared Catalog Page for different type of products"/>
            <stories value="Advanced Prices from Shared Catalog Page for different type of products"/>
            <features value="Shared Catalog"/>
            <title value="Ability to configure Advanced Prices from Shared Catalog Page for different type of products"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-56403"/>
            <group value="sharedCatalog"/>
        </annotations>

        <before>
            <magentoCLI stepKey="addDownloadableDomain" command="downloadable:domains:add static.magento.com"/>
            <!--Create Configurable product-->
            <actionGroup ref="AdminCreateApiConfigurableProductActionGroup" stepKey="createConfigurableProduct">
                <argument name="productName" value="ApiConfigurableProduct forSharedCatalog"/>
            </actionGroup>
            <!--Create Dynamic Bundle product-->
            <actionGroup ref="AdminCreateApiDynamicBundleProductActionGroup" stepKey="createDynamicBundle">
                <argument name="productName" value="ApiDynamicBundle forSharedCatalog"/>
            </actionGroup>
            <!--Create Fixed Bundle product-->
            <actionGroup ref="AdminCreateApiFixedBundleProductActionGroup" stepKey="createFixedBundle">
                <argument name="productName" value="ApiFixedBundle forSharedCatalog"/>
            </actionGroup>
            <!--Create Simple product-->
            <createData entity="SimpleProduct2" stepKey="createSimpleProduct">
                <field key="name">Simple Product forSharedCatalog</field>
            </createData>
            <!--Create Virtual product-->
            <createData entity="VirtualProduct" stepKey="createVirtualProduct">
                <field key="name">Virtual Product forSharedCatalog</field>
            </createData>
            <!--Create Gift Card product-->
            <createData entity="ApiGiftCard" stepKey="productApiGiftCard">
                <field key="name">Api Gift Card forSharedCatalog</field>
            </createData>

            <!-- Create Downloadable product -->
            <createData entity="ApiDownloadableProduct" stepKey="createDownloadableProduct">
                <field key="name">Api Downloadable Product forSharedCatalog</field>
            </createData>
            <createData entity="ApiDownloadableLink" stepKey="addDownloadableLink">
                <requiredEntity createDataKey="createDownloadableProduct"/>
            </createData>
            <createData entity="ApiDownloadableLink" stepKey="addDownloadableLink1">
                <requiredEntity createDataKey="createDownloadableProduct"/>
            </createData>

            <!-- Create Grouped product -->
            <createData entity="ApiGroupedProduct" stepKey="createGroupedProduct">
                <field key="name">Api Grouped Product forSharedCatalog</field>
            </createData>
            <createData entity="OneSimpleProductLink" stepKey="addProductOne">
                <requiredEntity createDataKey="createGroupedProduct"/>
                <requiredEntity createDataKey="createSimpleProduct"/>
            </createData>

            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>

        <after>
            <magentoCLI stepKey="removeDownloadableDomain" command="downloadable:domains:remove static.magento.com"/>

            <!--Delete configurable product-->
            <deleteData createDataKey="createConfigProductCreateConfigurableProduct" stepKey="deleteConfigProduct"/>
            <deleteData createDataKey="createConfigChildProduct1CreateConfigurableProduct" stepKey="deleteConfigChildProduct"/>
            <deleteData createDataKey="createConfigChildProduct2CreateConfigurableProduct" stepKey="deleteConfigChildProduct1"/>
            <deleteData createDataKey="createConfigProductAttributeCreateConfigurableProduct" stepKey="deleteConfigProductAttribute"/>

            <!--Delete Dynamic Bundle Product-->
            <deleteData createDataKey="simpleProduct1CreateDynamicBundle" stepKey="deleteSimpleProduct1"/>
            <deleteData createDataKey="simpleProduct2CreateDynamicBundle" stepKey="deleteSimpleProduct2"/>
            <deleteData createDataKey="simpleProduct3CreateDynamicBundle" stepKey="deleteSimpleProduct3"/>
            <deleteData createDataKey="simpleProduct4CreateDynamicBundle" stepKey="deleteSimpleProduct4"/>
            <deleteData createDataKey="createBundleProductCreateDynamicBundle" stepKey="deleteDynamicBundleProduct"/>

            <!--Delete Fixed Bundle Product-->
            <deleteData createDataKey="simpleProduct1CreateFixedBundle" stepKey="deleteSimpleProduct21"/>
            <deleteData createDataKey="simpleProduct2CreateFixedBundle" stepKey="deleteSimpleProduct22"/>
            <deleteData createDataKey="simpleProduct3CreateFixedBundle" stepKey="deleteSimpleProduct23"/>
            <deleteData createDataKey="simpleProduct4CreateFixedBundle" stepKey="deleteSimpleProduct24"/>
            <deleteData createDataKey="createBundleProductCreateFixedBundle" stepKey="deleteFixedBundleProduct"/>

            <deleteData createDataKey="createSimpleProduct" stepKey="deleteSimpleProduct"/>
            <deleteData createDataKey="createVirtualProduct" stepKey="deleteVirtualProduct"/>
            <deleteData createDataKey="productApiGiftCard" stepKey="deleteGiftCardProduct"/>
            <deleteData createDataKey="createDownloadableProduct" stepKey="deleteDownloadableProduct"/>
            <deleteData createDataKey="createGroupedProduct" stepKey="deleteGroupedProduct"/>

            <!--Delete Shared Catalog-->
            <amOnPage url="{{AdminSharedCatalogIndexPage.url}}" stepKey="goToAdminSharedCatalogIndexPage"/>
            <waitForPageLoad  time="30" stepKey="waitForAdminSharedCatalogIndexPageLoaded"/>
            <actionGroup ref="AdminDeleteSharedCatalogActionGroup" stepKey="deleteSharedCatalog"/>
            <actionGroup ref="resetAdminDataGridToDefaultView" stepKey="sharedCatalogResetFilter"/>

            <actionGroup ref="logout" stepKey="logoutFromAdmin"/>
        </after>
        <!--Create new SharedCatalog-->
        <actionGroup ref="AdminCreateSharedCatalogActionGroup" stepKey="createNewSharedCatalog"/>

        <!-- Select 'Set Pricing And Structure' form Actions menu for created catalog-> Configure-> toggle simple products in the grid-> Next-> Generate-> Save -->
        <actionGroup ref="AdminFilterSharedCatalogByNameActionGroup" stepKey="filterSharedCatalog"/>
        <click selector="{{AdminSharedCatalogsSection.select}}" stepKey="clickSelectButton1"/>
        <click selector="{{AdminSharedCatalogsSection.setPricingAndStructure}}" stepKey="clickOnSetPricingAndStructureItem1"/>
        <click selector="{{AdminSharedCatalogCatalogStructureSection.configureButton}}" stepKey="clickOnConfigureButton"/>
        <!--Assign created products to Shared Catalog-->
        <actionGroup ref="AdminSharedCatalogFilterProductsOnGridActionGroup" stepKey="filterProductsOnGrid1">
            <argument name="productName" value="forSharedCatalog"/>
        </actionGroup>
        <click selector="{{AdminSharedCatalogsSection.multiCheckForProductsAndCatalog}}" stepKey="clickMultiCheck"/>
        <click selector="{{AdminSharedCatalogsSection.selectAllForProductsAndCatalog}}" stepKey="clickSelectAll"/>
        <actionGroup ref="resetAdminDataGridToDefaultView" stepKey="resetProductFilter"/>

        <click selector="{{AdminSharedCatalogCatalogStructureSection.nextButton}}" stepKey="clickNextButton"/>

        <!--Asserting: tire price has config-->
        <seeElement selector="{{AdminSharedCatalogCatalogStructureProductGridSection.tierPriceConfByProductName($$createSimpleProduct.name$$)}}" stepKey="seeSimpleTirePrice"/>
        <dontSeeElement selector="{{AdminSharedCatalogCatalogStructureProductGridSection.tierPriceConfByProductName($$createConfigProductCreateConfigurableProduct.name$$)}}" stepKey="seeConfTirePrice"/>
        <seeElement selector="{{AdminSharedCatalogCatalogStructureProductGridSection.tierPriceConfByProductName($$createBundleProductCreateDynamicBundle.name$$)}}" stepKey="seeDynamicBundleTirePrice"/>
        <seeElement selector="{{AdminSharedCatalogCatalogStructureProductGridSection.tierPriceConfByProductName($$createBundleProductCreateFixedBundle.name$$)}}" stepKey="seeFixedBundleTirePrice"/>
        <seeElement selector="{{AdminSharedCatalogCatalogStructureProductGridSection.tierPriceConfByProductName($$createVirtualProduct.name$$)}}" stepKey="seeVirtualTirePrice"/>
        <seeElement selector="{{AdminSharedCatalogCatalogStructureProductGridSection.tierPriceConfByProductName($$createDownloadableProduct.name$$)}}" stepKey="seeDownloadableTirePrice"/>
        <dontSeeElement selector="{{AdminSharedCatalogCatalogStructureProductGridSection.tierPriceConfByProductName($$createGroupedProduct.name$$)}}" stepKey="seeGroupedTirePrice"/>
        <dontSeeElement selector="{{AdminSharedCatalogCatalogStructureProductGridSection.tierPriceConfByProductName($$productApiGiftCard.name$$)}}" stepKey="seeGiftCardTirePrice"/>
    </test>
</tests>
