<?xml version="1.0" encoding="UTF-8"?>

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="CreditMemoOrderToStoreCreditTest">
        <annotations>
            <stories value="Admin can create credit memo to store credit"/>
            <title value="Admin can create credit memo to store credit."/>
            <description value="Logged in customer places order and pays with reward points. Admin invoices and creates credit memo for order. Reward points are refunded."/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-5719"/>
            <group value="customerBalance"/>
            <skip>
                <issueId value="MC-17140"/>
            </skip>
        </annotations>

        <before>
            <!--Create category-->
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <!--Create Product-->
            <createData entity="SimpleProduct" stepKey="createProduct">
                <field key="price">100</field>
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <!--Creating customer-->
            <createData entity="Simple_US_Customer" stepKey="createCustomer" >
                <field key="group_id">1</field>
            </createData>
        </before>

        <after>
            <!--Delete category-->
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <!--Delete product-->
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
            <!--Delete customer-->
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
        </after>

        <!--Login to storefront as previously created customer-->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginAsCustomer">
            <argument name="Customer" value="$$createCustomer$$"/>
        </actionGroup>
        <!--Open the Product Page and Add the product to Cart-->
        <amOnPage url="{{StorefrontProductPage.url($$createProduct.name$$)}}" stepKey="goToProductPage" />
        <waitForPageLoad stepKey="waitForProductPageLoad"/>
        <actionGroup ref="addToCartFromStorefrontProductPage" stepKey="addToCartFromStorefrontProductPage">
            <argument name="productName" value="$$createProduct.name$$"/>
        </actionGroup>
        <!--Go to Checkout-->
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="goToCheckoutFromMinicart"/>
        <waitForElement selector="{{CheckoutShippingSection.isShippingStep}}" stepKey="waitForShippingSectionLoaded"/>
        <seeElement selector="{{CheckoutShippingSection.selectedShippingAddress}}" stepKey="seeSavedAddressSelected"/>
        <checkOption selector="{{CheckoutShippingMethodsSection.shippingMethodFlatRate}}" stepKey="selectFlatRateShipping"/>
        <click selector="{{CheckoutShippingSection.next}}" stepKey="clickNextOnCheckoutShipping"/>
        <waitForElement selector="{{CheckoutPaymentSection.paymentSectionTitle}}" time="30" stepKey="waitForPaymentSectionLoadedTest"/>

        <!--Place order-->
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="customerSelectCheckMoneyOrderPayment" />
        <waitForElementVisible selector="{{CheckoutPaymentSection.placeOrder}}" stepKey="waitForPlaceOrderButton"/>
        <click selector="{{CheckoutPaymentSection.placeOrder}}" stepKey="clickPlaceOrder"/>
        <waitForElement selector="{{CheckoutSuccessMainSection.success}}" time="30" stepKey="waitForLoadSuccessPage"/>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber22}}" stepKey="grabOrderNumber"/>

        <!-- Search for Order in the order grid -->
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin1"/>
        <amOnPage url="{{AdminOrdersPage.url}}" stepKey="onOrdersPage"/>
        <waitForPageLoad time="30" stepKey="waitForOrderListPageLoad"/>
        <conditionalClick selector="{{AdminOrdersGridSection.clearFilters}}" dependentSelector="{{AdminOrdersGridSection.clearFilters}}" visible="true" stepKey="clearExistingOrderFilter"/>
        <fillField selector="{{AdminOrdersGridSection.search}}" userInput="{$grabOrderNumber}" stepKey="searchOrderNum"/>
        <click selector="{{AdminOrdersGridSection.submitSearch}}" stepKey="submitSearch"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMask4"/>
        <click selector="{{AdminOrdersGridSection.firstRow}}" stepKey="clickOrderRow"/>

        <!-- Create invoice -->
        <click selector="{{AdminOrderDetailsMainActionsSection.invoice}}" stepKey="clickInvoiceButton"/>
        <see selector="{{AdminHeaderSection.pageTitle}}" userInput="New Invoice" stepKey="seeNewInvoiceInPageTitle" after="clickInvoiceButton"/>
        <click selector="{{AdminInvoiceMainActionsSection.submitInvoice}}" stepKey="clickSubmitInvoice"/>
        <seeInCurrentUrl url="{{AdminOrderDetailsPage.url}}" stepKey="seeViewOrderPageInvoice"/>
        <see selector="{{AdminOrderDetailsMessagesSection.successMessage}}" userInput="The invoice has been created." stepKey="seeInvoiceCreateSuccess"/>
        <see selector="{{AdminOrderDetailsInformationSection.orderStatus}}" userInput="Processing" stepKey="seeOrderProcessing"/>

        <!-- Create shipment -->
        <click selector="{{AdminOrderDetailsMainActionsSection.ship}}" stepKey="clickShip"/>
        <seeInCurrentUrl url="{{AdminShipmentNewPage.url}}" stepKey="OrderShipmentUrl"/>
        <click selector="{{AdminShipmentMainActionsSection.submitShipment}}" stepKey="submitShipment"/>
        <see selector="{{AdminOrderDetailsMessagesSection.successMessage}}" userInput="The shipment has been created." stepKey="successfullShipmentCreation"/>
        <see selector="{{AdminOrderDetailsInformationSection.orderStatus}}" userInput="Complete" stepKey="seeOrderComplete"/>

        <!--Create credit memo-->
        <click selector="{{AdminOrderDetailsMainActionsSection.creditMemo}}" stepKey="clickCreateCreditMemo"/>
        <see selector="{{AdminHeaderSection.pageTitle}}" userInput="New Memo" stepKey="seeNewMemoInPageTitle"/>
        <!--Submit credit memo with full refund to store credit-->
        <comment userInput="Submit credit memo with full refund to store credit" stepKey="creditMemoComment"/>
        <checkOption selector="{{AdminCreditMemoTotalSection.refundStoreCredit}}" stepKey="selectRefundToCredit"/>
        <seeInField selector="{{AdminCreditMemoTotalSection.refundStoreCreditAmount}}" userInput="105" stepKey="seeCorrectPrefillInRefundStoreCreditAmount"/>
        <fillField selector="{{AdminCreditMemoTotalSection.refundStoreCreditAmount}}" userInput="105" stepKey="fillRefundStoreCreditAmount"/>
        <click selector="{{AdminCreditMemoTotalSection.submitRefundOffline}}" stepKey="submitCreditMemoSuccess"/>
        <see selector="{{AdminMessagesSection.success}}" userInput="You created the credit memo." stepKey="seeSuccessMessage"/>
        <see selector="{{AdminOrderDetailsInformationSection.orderStatus}}" userInput="Closed" stepKey="seeOrderClosed"/>
        <!--Credit memo action is not available after full refund-->
        <dontSee selector="{{AdminOrderDetailsMainActionsSection.creditMemo}}" stepKey="creditMemoActionNotAvailable"/>
    </test>
</tests>
