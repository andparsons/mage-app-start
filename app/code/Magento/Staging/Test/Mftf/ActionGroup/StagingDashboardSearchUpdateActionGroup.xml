<?xml version="1.0" encoding="UTF-8"?>
<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
    <actionGroup name="StagingDashboardSearchUpdateActionGroup">
        <arguments>
            <argument name="staging"/>
        </arguments>
        <amOnPage url="{{AdminStagingDashboardPage.url}}" stepKey="amOnStagingUpdatePage"/>
        <waitForPageLoad stepKey="waitForStagingUpdatePageLoad"/>
        <selectOption selector="{{AdminContentStagingDashboardSection.stagingViewTypeSelect}}" userInput="Timeline" stepKey="selectTimelineMode"/>
        <waitForPageLoad stepKey="waitForTimelineLoad"/>
        <conditionalClick selector="{{AdminDataGridHeaderSection.clearFilters}}" dependentSelector="{{AdminDataGridHeaderSection.clearFilters}}" visible="true" stepKey="clearExistingFilters"/>
        <clearField selector="{{AdminAssignToExistingUpdateSection.searchStagingName}}" stepKey="clearField"/>
        <fillField selector="{{AdminAssignToExistingUpdateSection.searchStagingName}}" userInput="{{staging.updateName}}" stepKey="fillStagingName"/>
        <click selector="{{AdminAssignToExistingUpdateSection.submitSearch}}" stepKey="clickSubmitSearch"/>
        <see selector="{{AdminContentStagingDashboardSection.timeLineEvent}}" userInput="{{staging.updateName}}" stepKey="seeNeededUpdate"/>
    </actionGroup>
    <actionGroup name="StagingDashboardVerifyHoverContentActionGroup" extends="StagingDashboardSearchUpdateActionGroup">
        <arguments>
            <argument name="objectsQty" defaultValue="1" type="string"/>
            <argument name="productsQty" defaultValue="1" type="string"/>
        </arguments>
        <click selector="{{AdminContentStagingDashboardSection.timeLineEventParameterized(staging.updateName)}}" stepKey="clickTimelineEvent"/>
        <see selector="{{AdminContentStagingDashboardSection.title(staging.updateName)}}" userInput="{{staging.updateName}}" stepKey="seeTitle"/>
        <see selector="{{AdminContentStagingDashboardSection.stagingEventsViewEdit(staging.updateName)}}" userInput="View/Edit" stepKey="seeUpdateViewAneEdit"/>
        <see selector="{{AdminContentStagingDashboardSection.stagingEventsActions(staging.updateName, 'Preview')}}" userInput="Preview" stepKey="seePreview"/>
        <see selector="{{AdminContentStagingDashboardSection.stagingEventsStatus(staging.updateName, 'Upcoming')}}" userInput="Upcoming" stepKey="seeStatus"/>
        <see selector="{{AdminContentStagingDashboardSection.tooltipWrapper}}" userInput="{{objectsQty}} Objects" stepKey="seeObjectsQty"/>
        <see selector="{{AdminContentStagingDashboardSection.tooltipWrapper}}" userInput="{{productsQty}} Products" stepKey="seeProductsQty"/>
    </actionGroup>
    <actionGroup name="StagingDashboardDontSeeUpdateActionGroup" extends="StagingDashboardSearchUpdateActionGroup">
        <remove keyForRemoval="seeNeededUpdate"/>
        <dontSee selector="{{AdminContentStagingDashboardSection.timeLineEvent}}" userInput="{{staging.updateName}}" stepKey="dontSeeUpdate"/>
    </actionGroup>
    <actionGroup name="StagingDashboardClearFiltersActionGroup">
        <amOnPage url="{{AdminStagingDashboardPage.url}}" stepKey="amOnStagingUpdatePage"/>
        <waitForPageLoad stepKey="waitForStagingDashboardPage"/>
        <conditionalClick selector="{{AdminDataGridHeaderSection.clearFilters}}" dependentSelector="{{AdminDataGridHeaderSection.clearFilters}}" visible="true" stepKey="clearExistingOrderFilters"/>
        <waitForPageLoad stepKey="waitForGridFiltersToClear"/>
        <dontSeeElementInDOM selector="{{AdminDataGridHeaderSection.clearFilters}}" stepKey="dontSeeClearFilters"/>
    </actionGroup>
</actionGroups>
