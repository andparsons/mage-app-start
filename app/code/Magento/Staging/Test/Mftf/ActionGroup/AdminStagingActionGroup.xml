<?xml version="1.0" encoding="UTF-8"?>

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">

    <!-- Creates a staging update for a product -->
    <!-- Assumes that you are already on the entities edit page -->
    <actionGroup name="createEntityNameStagingUpdate">
        <arguments>
            <argument name="stagingUpdate" defaultValue="_defaultStaging"/>
            <argument name="endDate" defaultValue=""/>
        </arguments>

        <!-- Fill out the staging update details -->
        <click stepKey="scheduleNewUpdateBtn" selector="{{AdminStagingSlideOutSection.scheduleNewUpdateBtn}}"/>
        <fillField stepKey="fillName" selector="{{AdminStagingSlideOutSection.updateName}}" userInput="{{stagingUpdate.name}}"/>
        <fillField stepKey="fillDescription" selector="{{AdminStagingSlideOutSection.updateDescription}}" userInput="{{stagingUpdate.description}}"/>

        <!-- Check to see if it is close to the new minute. If so, wait a few seconds -->
        <executeJS stepKey="needWait" function="
                var today = new Date();
                var sec = today.getSeconds();
                return sec > 50 ? (61-sec) : 0;"/>
        <wait stepKey="conditionalWait" time="$needWait"/>

        <!-- Build the date in the correct format -->
        <generateDate stepKey="generateDate" date="+1 minute" format="m/d/Y g:i A"/>
        <executeJS stepKey="numSecondsLeft" function="
                var today = new Date();
                var sec = today.getSeconds();
                return 60 - sec;"/>
        <executeJS stepKey="getStartingTime" function="return Math.floor(new Date() / 1000);"/>
        <fillField stepKey="fillStartDate" selector="{{AdminStagingSlideOutSection.startDate}}" userInput="{$generateDate}"/>
        <fillField stepKey="fillEndDate" selector="{{AdminStagingSlideOutSection.endDate}}" userInput="{{endDate}}"/>

        <!-- Fill out the field to be changed in the staging update -->
        <fillField stepKey="fillNewName" selector="{{AdminStagingSlideOutSection.name}}" userInput="{{stagingUpdate.entityName}}"/>

        <!-- Save the update details -->
        <scrollToTopOfPage stepKey="scrollToTop"/>
        <click stepKey="clickSave" selector="{{AdminStagingSlideOutSection.save}}"/>

        <click stepKey="saveProduct" selector="{{AdminProductFormActionSection.saveButton}}"/>
        <seeElement stepKey="assertSuccess" selector="{{AdminProductMessagesSection.successMessage}}"/>

        <!-- Check to see if we have waited the require time yet. If not, wait the rest of the time -->
        <executeJS stepKey="getEndingTime" function="return Math.floor(new Date() / 1000);"/>
        <executeJS stepKey="getTimeToWait" function="
                var timePassed = {$getEndingTime} - {$getStartingTime};
                var timeLeft = {$numSecondsLeft} - timePassed;
                return timeLeft > 0 ? timeLeft : 0;"/>
        <wait stepKey="conditionalWait2" time="$getTimeToWait"/>

        <magentoCLI stepKey="runCron" command="cron:run --group='staging'"/>
        <magentoCLI stepKey="reindex" command="indexer:reindex"/>
        <magentoCLI stepKey="flushCache" command="cache:flush"/>
    </actionGroup>

    <!-- Changes the view of the items on staging to either grid, list, or timeline -->
    <actionGroup name="changeStagingView">
        <arguments>
            <argument name="view" type="string"/>
        </arguments>

        <amOnPage stepKey="goToStagingDashboard" url="{{AdminStagingDashboardPage.url}}"/>
        <selectOption stepKey="selectView" selector="{{AdminStagingDashboardSection.view}}" userInput="{{view}}"/>
        <waitForPageLoad stepKey="waitForViewApplied"/>
    </actionGroup>
    <actionGroup name="FillScheduleUpdateBasicActionGroup">
        <arguments>
            <argument name="schedule"/>
        </arguments>
        <fillField selector="{{AdminStagingSlideOutSection.updateName}}" userInput="{{schedule.updateName}}" stepKey="fillUpdateName"/>
        <fillField selector="{{AdminStagingSlideOutSection.updateDescription}}" userInput="{{schedule.updateDescription}}" stepKey="fillDescription"/>
        <click selector="{{AdminStagingSlideOutSection.datepickerStartDate}}" stepKey="clickDatePicker"/>
        <click selector="{{AdminStagingSlideOutSection.datepickerGoToday}}" stepKey="clickGoToday"/>
        <click selector="{{AdminStagingSlideOutSection.datepickerClose}}" stepKey="clickClose"/>
        <executeJS function="var date = new Date(jQuery('[name=\'staging[start_time]\']').val()),
        options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };
        date.setMinutes(date.getMinutes() + {{schedule.scheduleMinutesAhead}});
        date.setDate(date.getDate() + 1);
        jQuery('[name=\'staging[start_time]\']').val(date.toLocaleString('en-US', options).replace(',', ''))" stepKey="executeJS"/>
        <executeJS function="jQuery('[name=\'staging[start_time]\']').trigger('change')" stepKey="executeJS2"/>
        <click selector="{{AdminStagingSlideOutSection.save}}" stepKey="clickSave"/>
        <see selector="{{AdminScheduledChangesSection.scheduleLabel(schedule.start)}}" userInput="{{schedule.start}}" stepKey="seeStart"/>
        <see selector="{{AdminScheduledChangesSection.scheduleDetails(schedule.updateName)}}" userInput="{{schedule.updateName}}" stepKey="seeUpdateName"/>
        <see selector="{{AdminScheduledChangesSection.scheduleDetails(schedule.updateDescription)}}" userInput="{{schedule.updateDescription}}" stepKey="seeDescription"/>
    </actionGroup>
    <actionGroup name="navigateToViewStagingUpdateFromStagingDashboard">
        <arguments>
            <argument name="update"/>
        </arguments>
        <amOnPage url="{{AdminStagingDashboardPage.url}}" stepKey="amOnStagingDashboardPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <conditionalClick selector="{{AdminDataGridHeaderSection.clearFilters}}" dependentSelector="{{AdminDataGridHeaderSection.clearFilters}}" visible="true" stepKey="clearExistingOrderFilters"/>
        <waitForPageLoad stepKey="waitForFiltersCleared"/>
        <selectOption selector="{{AdminContentStagingDashboardSection.stagingViewTypeSelect}}" userInput="Timeline" stepKey="selectTimelineGrid"/>
        <waitForElementVisible selector="{{AdminContentStagingDashboardSection.timeLineGrid}}" stepKey="waitForTimelineGrid"/>
        <fillField selector="{{AdminAssignToExistingUpdateSection.searchStagingName}}" userInput="{{update.updateName}}" stepKey="fillSearchStagingName"/>
        <click selector="{{AdminAssignToExistingUpdateSection.submitSearch}}" stepKey="clickSubmitSearch"/>
        <waitForPageLoad stepKey="waitForSearch"/>
        <click selector="{{AdminContentStagingDashboardSection.timeLineEvent}}" stepKey="clickTimelineEvent"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad2"/>
        <click selector="{{AdminContentStagingDashboardSection.stagingEventsActions(update.updateName, 'View/Edit')}}" stepKey="clickEditLink"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad3"/>
        <seeInTitle userInput="{{update.updateName}}" stepKey="confirmOnEditPage"/>
    </actionGroup>
    <actionGroup name="NavigateToPreviewStagingUpdateFromStagingDashboard" extends="navigateToViewStagingUpdateFromStagingDashboard">
        <click selector="{{AdminContentStagingDashboardSection.stagingEventsActions(update.updateName, 'Preview')}}" after="waitForPageLoad2" stepKey="clickEditLink"/>
        <remove keyForRemoval="confirmOnEditPage"/>
        <executeJS function="jQuery('[data-role=\'preview-iframe\']').attr('id', 'preview-iframe')" stepKey="setPreviewFrameId"/>
        <switchToIFrame userInput="preview-iframe" stepKey="switchToIFrame" />
        <waitForPageLoad time="30" stepKey="waitForSwitchToIFrame"/>
    </actionGroup>
    <actionGroup name="openEditSlideOutForCMSPagesStagingUpdateFromViewStagingUpdate">
        <conditionalClick selector="{{AdminStagingDashboardSection.cmsPagesDropDown}}" dependentSelector="{{AdminStagingDashboardSection.cmsPagesDropDownActive}}" visible="false" stepKey="conditionalClickCMSPagesDropDown"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad"/>
        <click selector="{{AdminStagingDashboardSection.cmsPagesGridSelect}}" stepKey="clickCMSPagesSelect"/>
        <waitForPageLoad time="30" stepKey="waitForCMSPageSelect"/>
        <click selector="{{AdminStagingDashboardSection.cmsPagesGridViewEdit}}" stepKey="clickCMSPagesViewEdit"/>
        <waitForPageLoad time="30" stepKey="waitForCMSPageModal"/>
    </actionGroup>
    <actionGroup name="openEditSlideOutForCMSBlockStagingUpdateFromViewStagingUpdate" extends="openEditSlideOutForCMSPagesStagingUpdateFromViewStagingUpdate">
        <conditionalClick selector="{{AdminStagingDashboardSection.cmsBlocksDropDown}}" dependentSelector="{{AdminStagingDashboardSection.cmsBlocksDropDownActive}}" visible="false" stepKey="conditionalClickCMSPagesDropDown"/>
        <click selector="{{AdminStagingDashboardSection.cmsBlocksGridSelect}}" stepKey="clickCMSPagesSelect"/>
        <click selector="{{AdminStagingDashboardSection.cmsBlocksGridViewEdit}}" stepKey="clickCMSPagesViewEdit"/>
    </actionGroup>
    <actionGroup name="openEditSlideOutForProductsStagingUpdateFromViewStagingUpdate" extends="openEditSlideOutForCMSPagesStagingUpdateFromViewStagingUpdate">
        <conditionalClick selector="{{AdminStagingDashboardSection.productsDropDown}}" dependentSelector="{{AdminStagingDashboardSection.productsDropDownActive}}" visible="false" stepKey="conditionalClickCMSPagesDropDown"/>
        <click selector="{{AdminStagingDashboardSection.productsGridSelect}}" stepKey="clickCMSPagesSelect"/>
        <click selector="{{AdminStagingDashboardSection.productsGridViewEdit}}" stepKey="clickCMSPagesViewEdit"/>
    </actionGroup>
    <actionGroup name="openEditSlideOutForCategoriesStagingUpdateFromViewStagingUpdate" extends="openEditSlideOutForCMSPagesStagingUpdateFromViewStagingUpdate">
        <conditionalClick selector="{{AdminStagingDashboardSection.categoriesDropDown}}" dependentSelector="{{AdminStagingDashboardSection.categoriesDropDownActive}}" visible="false" stepKey="conditionalClickCMSPagesDropDown"/>
        <click selector="{{AdminStagingDashboardSection.categoriesGridSelect}}" stepKey="clickCMSPagesSelect"/>
        <click selector="{{AdminStagingDashboardSection.categoriesGridViewEdit}}" stepKey="clickCMSPagesViewEdit"/>
    </actionGroup>
    <actionGroup name="navigateToStagingSlideout">
        <click selector="{{AdminStagingSlideOutSection.scheduleNewUpdateBtn}}" stepKey="clickOnStagingBtn" />
        <waitForElementVisible selector="{{AdminStagingSlideOutSection.title}}" stepKey="waitForSlideOutOpen"/>
    </actionGroup>
    <actionGroup name="WaitForStagingPreviewLoadedActionGroup">
        <seeInCurrentUrl url="{{AdminStagingPreviewPage.url}}" stepKey="seeInUrlUpdatePreview"/>
        <executeJS function="jQuery('[data-role=\'preview-iframe\']').attr('id', 'preview-iframe')" stepKey="setPreviewIframeId"/>
        <switchToIFrame userInput="preview-iframe" stepKey="switchToIFrameNow"/>
        <waitForPageLoad time="60" stepKey="waitForPageLoad"/>
        <switchToIFrame stepKey="returnToHostPage"/>
        <waitForElement selector="{{AdminStagingPreviewSection.shareBtn}}" stepKey="waitStagingUpdateItemContentWrapper" time="60"/>
    </actionGroup>
    <actionGroup name="OpenContentSectionOnStagingSlideOut">
        <waitForElementVisible time="30" selector="{{CmsNewPagePageContentSection.header}}" stepKey="waitForElementVisible"/>
        <click selector="{{CmsNewPagePageContentSection.header}}" stepKey="clickExpandContent"/>
        <waitForPageLoad time="30" stepKey="waitForStageToLoad"/>
    </actionGroup>
    <actionGroup name="openPreviewForScheduledUpdate">
        <arguments>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <click selector="{{AdminStagingSlideOutSection.nthPreviewLink(index)}}" stepKey="clickPreviewScheduleUpdate"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <waitForPageLoad time="30" stepKey="waitForPreview"/>
        <!--Set frame id because switchToIFrame requires ID as parameter-->
        <executeJS function="jQuery('[data-role=\'preview-iframe\']').attr('id', 'preview-iframe')" stepKey="setPreviewFrameId"/>
        <switchToIFrame userInput="preview-iframe" stepKey="switchToPreviewFrame"/>
        <waitForPageLoad time="30" stepKey="waitForIFrame"/>
    </actionGroup>
    <actionGroup name="openPreviewForScheduledUpdateFromSlideOut" extends="openPreviewForScheduledUpdate">
        <arguments>
            <argument name="index" defaultValue="1" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{AdminStagingSlideOutSection.previewModal}}" stepKey="clickPreviewScheduleUpdate"/>
        <click selector="{{AdminStagingSlideOutSection.previewModal}}" stepKey="switchToNextTab"/>
    </actionGroup>
    <actionGroup name="createAndSaveScheduleUpdateOneDayInFuture">
        <arguments>
            <argument name="stagingUpdate" defaultValue="_defaultStaging"/>
        </arguments>
        <fillField selector="{{AdminStagingSlideOutSection.updateName}}" userInput="{{stagingUpdate.name}}" stepKey="fillName"/>
        <fillField selector="{{AdminStagingSlideOutSection.updateDescription}}" userInput="{{stagingUpdate.description}}" stepKey="fillDescription"/>
        <generateDate date="+1 day" format="m/d/Y g:i A" stepKey="generateDate"/>
        <fillField selector="{{AdminStagingSlideOutSection.startDate}}" userInput="{$generateDate}" stepKey="fillStartDate"/>
        <click selector="{{AdminStagingSlideOutSection.save}}:last-child" stepKey="clickSave"/>
        <waitForPageLoad stepKey="waitForSave"/>
        <see selector="{{AdminScheduledChangesSection.scheduleDetails(stagingUpdate.name)}}" userInput="{{stagingUpdate.name}}" stepKey="seeUpdateName"/>
        <see selector="{{AdminScheduledChangesSection.scheduleDetails(stagingUpdate.description)}}" userInput="{{stagingUpdate.description}}" stepKey="seeDescription"/>
    </actionGroup>
    <actionGroup name="openEditFormForStagingSlideOut">
        <arguments>
            <argument name="schedule"/>
        </arguments>
        <click selector="{{AdminScheduledChangesSection.scheduleActions(schedule.updateName, 'View/Edit')}}" stepKey="clickEditScheduleUpdate"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <waitForElementVisible selector="{{AdminStagingSlideOutSection.title}}" stepKey="waitForSlideOutOpen"/>
    </actionGroup>
    <actionGroup name="saveScheduleUpdate">
        <arguments>
            <argument name="stagingUpdate" defaultValue="_defaultStaging"/>
            <argument name="index" defaultValue="2" type="string"/>
        </arguments>
        <waitForElementVisible selector="{{AdminStagingSlideOutSection.saveButton(index)}}" stepKey="waitForSaveButton"/>
        <click selector="{{AdminStagingSlideOutSection.saveButton(index)}}" stepKey="clickSave"/>
        <waitForPageLoad stepKey="waitForSave"/>
        <see selector="{{AdminScheduledChangesSection.scheduleDetails(stagingUpdate.name)}}" userInput="{{stagingUpdate.name}}" stepKey="seeUpdateName"/>
        <see selector="{{AdminScheduledChangesSection.scheduleDetails(stagingUpdate.description)}}" userInput="{{stagingUpdate.description}}" stepKey="seeDescription"/>
    </actionGroup>
    <actionGroup name="saveStagingDashboardUpdateForm">
        <arguments>
            <argument name="updateName" defaultValue="UpdateWithoutEnd"/>
        </arguments>
        <scrollToTopOfPage stepKey="scrollTopPageStagingUpdate"/>
        <waitForElementVisible selector="{{AdminStagingDashboardUpdateFormActionSection.saveButton}}" stepKey="waitForSaveButton"/>
        <click selector="{{AdminStagingDashboardUpdateFormActionSection.saveButton}}" stepKey="clickSaveStagingUpdate"/>
        <waitForPageLoad stepKey="waitForStagingUpdateToSave"/>
        <see selector="{{AdminStagingDashboardMessagesSection.successMessage}}" userInput="You saved the &quot;{{updateName}}&quot; update." stepKey="seeSaveConfirmation"/>
    </actionGroup>
    <actionGroup name="saveStagingDashboardSlideOutUpdateForm">
        <waitForElementVisible selector="{{AdminStagingSlideOutSection.activeSaveButton}}" stepKey="waitForSaveButton"/>
        <click selector="{{AdminStagingSlideOutSection.activeSaveButton}}" stepKey="clickSaveStagingUpdateSlideOut"/>
        <waitForPageLoad stepKey="waitForStagingUpdateToSave"/>
        <waitForElementVisible selector="{{AdminStagingDashboardUpdateFormActionSection.saveButton}}" stepKey="waitForDashboardStagingSaveButton"/>
    </actionGroup>
    <actionGroup name="closeStagingDashboardSlideOutUpdateForm">
        <waitForElementVisible selector="{{AdminStagingSlideOutSection.activeCloseButton}}" stepKey="waitForCloseButton"/>
        <click selector="{{AdminStagingSlideOutSection.activeCloseButton}}" stepKey="clickSaveStagingUpdateSlideOut"/>
        <waitForPageLoad stepKey="waitForStagingUpdateToClose"/>
        <waitForElementVisible selector="{{AdminStagingDashboardUpdateFormActionSection.saveButton}}" stepKey="waitForDashboardStagingSaveButton"/>
    </actionGroup>
</actionGroups>
