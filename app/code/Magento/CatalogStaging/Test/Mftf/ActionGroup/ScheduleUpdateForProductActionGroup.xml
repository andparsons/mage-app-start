<?xml version="1.0" encoding="UTF-8"?>
<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
    <actionGroup name="FillScheduleUpdateHeaderForProductActionGroup">
        <arguments>
            <argument name="staging"/>
            <argument name="timeStart" type="string"/>
            <argument name="timeEnd" type="string" defaultValue=""/>
        </arguments>
        <fillField selector="{{AdminStagingSlideOutSection.updateName}}" userInput="{{staging.updateName}}" stepKey="fillUpdateName"/>
        <fillField selector="{{AdminStagingSlideOutSection.updateDescription}}" userInput="{{staging.updateDescription}}" stepKey="fillDescription"/>
        <fillField selector="{{AdminStagingSlideOutSection.startDate}}" userInput="{{timeStart}}" stepKey="fillStartDate"/>
        <fillField selector="{{AdminStagingSlideOutSection.endDate}}" userInput="{{timeEnd}}" stepKey="fillEndDate"/>
    </actionGroup>
    <actionGroup name="CreateScheduleUpdateForProductActionGroup" extends="FillScheduleUpdateHeaderForProductActionGroup">
        <click selector="{{AdminStagingSlideOutSection.scheduleNewUpdateBtn}}" before="fillUpdateName" stepKey="clickNewUpdate"/>
        <waitForLoadingMaskToDisappear after="clickNewUpdate" stepKey="waitForLoadingMask"/>
    </actionGroup>
    <actionGroup name="SaveScheduleUpdateForProductActionGroup">
        <arguments>
            <argument name="staging"/>
        </arguments>
        <click selector="{{AdminStagingSlideOutSection.save}}" stepKey="clickSave"/>
        <see selector="{{AdminScheduledChangesSection.scheduleDetails(staging.updateName)}}" userInput="{{staging.updateName}}" stepKey="seeUpdateName"/>
        <see selector="{{AdminScheduledChangesSection.scheduleDetails(staging.updateDescription)}}" userInput="{{staging.updateDescription}}" stepKey="seeUpdateDescription"/>
    </actionGroup>
    <!--Click *Preview* on the grid and check product with applied special price-->
    <actionGroup name="PreviewButtonProductStagingEditUpdateSpecialPrice">
        <arguments>
            <argument name="staging"/>
            <argument name="productPrice" type="string"/>
        </arguments>

        <click selector="{{AdminScheduledChangesSection.scheduleViewEdit(staging.updateName)}}" stepKey="clickUpdateViewAndEdit"/>
        <click selector="{{AdminSlideOutDialogSection.previewButton}}" stepKey="clickPreviewBtn"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <waitForPageLoad time="30" stepKey="waitForTabPageLoad"/>
        <!--Set frame id because switchToIFrame requires ID as parameter-->
        <executeJS function="jQuery('[data-role=\'preview-iframe\']').attr('id', 'preview-iframe')" stepKey="setPreviewFrameId"/>
        <switchToIFrame userInput="preview-iframe" stepKey="switchToPreviewFrame"/>
        <waitForPageLoad time="30" stepKey="waitForIframePageLoad"/>
        <see selector="{{StorefrontProductInfoMainSection.specialPrice}}" userInput="{{productPrice}}" stepKey="seeProductPrice"/>
        <!--Switch back to admin with a link, the preview button doesn't open a new tab-->
        <amOnPage url="{{AdminProductEditPage.url($$createSimpleProduct.id$$)}}" stepKey="openEditProductPage"/>
        <waitForPageLoad time="30" stepKey="waitForProductPageLoad"/>
    </actionGroup>
    <!--Click *Preview* on the grid and check product with applied special price-->
    <actionGroup name="PreviewProductStagingUpdateSpecialPrice">
        <arguments>
            <argument name="staging"/>
            <argument name="productPrice" type="string"/>
        </arguments>
        <click selector="{{AdminScheduledChangesSection.scheduleActions(staging.updateName, 'Preview')}}" stepKey="clickPreview"/>
        <switchToNextTab stepKey="switchToNextTab"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad"/>
        <!--Set frame id because switchToIFrame requires ID as parameter-->
        <executeJS function="jQuery('[data-role=\'preview-iframe\']').attr('id', 'preview-iframe')" stepKey="setPreviewFrameId"/>
        <switchToIFrame userInput="preview-iframe" stepKey="switchToPreviewFrame"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad2"/>
        <see selector="{{StorefrontProductInfoMainSection.specialPrice}}" userInput="{{productPrice}}" stepKey="seeProductPrice"/>
        <closeTab stepKey="closeTab"/>
    </actionGroup>
    <actionGroup name="AssertWysiwygInitedForField">
        <arguments>
            <argument name="field" type="string"/>
        </arguments>
        <waitForPageLoad stepKey="waitForIframeLoad"/>
        <seeElement selector="{{AdminCatalogStagingSlideOutSection.wysiwygIframe(field)}}" stepKey="seeIfarmeIsInited" />
    </actionGroup>
    <!--This action can be used only if wysiwyg config set to "Disable by default"-->
    <actionGroup name="AdminProductUpdateFillWysiwygFieldByName">
        <arguments>
            <argument name="fieldName" type="string"/>
            <argument name="content" type="string"/>
        </arguments>
        <executeJS function="document.querySelector('{{AdminCatalogStagingSlideOutSection.contentTab}}').scrollIntoView()" stepKey="scrollToContentTab"/>
        <conditionalClick selector="{{AdminCatalogStagingSlideOutSection.contentTab}}" dependentSelector="{{AdminCatalogStagingSlideOutSection.wysiwygFieldByName(fieldName)}}" visible="false" stepKey="expandContentTab"/>
        <fillField selector="{{AdminCatalogStagingSlideOutSection.wysiwygFieldByName(fieldName)}}" userInput="{{content}}" stepKey="fillFieldByName"/>
    </actionGroup>
</actionGroups>
